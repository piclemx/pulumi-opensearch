# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetHostResult',
    'AwaitableGetHostResult',
    'get_host',
    'get_host_output',
]

@pulumi.output_type
class GetHostResult:
    """
    A collection of values returned by getHost.
    """
    def __init__(__self__, active=None, id=None, url=None):
        if active and not isinstance(active, bool):
            raise TypeError("Expected argument 'active' to be a bool")
        pulumi.set(__self__, "active", active)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if url and not isinstance(url, str):
            raise TypeError("Expected argument 'url' to be a str")
        pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter
    def active(self) -> bool:
        """
        should be set to `true`
        """
        return pulumi.get(self, "active")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def url(self) -> str:
        """
        the url of the active cluster
        """
        return pulumi.get(self, "url")


class AwaitableGetHostResult(GetHostResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetHostResult(
            active=self.active,
            id=self.id,
            url=self.url)


def get_host(active: Optional[bool] = None,
             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetHostResult:
    """
    `get_host` can be used to retrieve the host URL for the provider's current cluster.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_opensearch as opensearch

    test = opensearch.get_host(active=True)
    ```


    :param bool active: should be set to `true`
    """
    __args__ = dict()
    __args__['active'] = active
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('opensearch:index/getHost:getHost', __args__, opts=opts, typ=GetHostResult).value

    return AwaitableGetHostResult(
        active=pulumi.get(__ret__, 'active'),
        id=pulumi.get(__ret__, 'id'),
        url=pulumi.get(__ret__, 'url'))


@_utilities.lift_output_func(get_host)
def get_host_output(active: Optional[pulumi.Input[bool]] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetHostResult]:
    """
    `get_host` can be used to retrieve the host URL for the provider's current cluster.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_opensearch as opensearch

    test = opensearch.get_host(active=True)
    ```


    :param bool active: should be set to `true`
    """
    ...
