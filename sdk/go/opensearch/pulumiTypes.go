// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"github.com/piclemx/pulumi-opensearch/sdk/go/opensearch/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AuditConfigAudit struct {
	DisabledRestCategories      []string `pulumi:"disabledRestCategories"`
	DisabledTransportCategories []string `pulumi:"disabledTransportCategories"`
	EnableRest                  *bool    `pulumi:"enableRest"`
	EnableTransport             *bool    `pulumi:"enableTransport"`
	ExcludeSensitiveHeaders     *bool    `pulumi:"excludeSensitiveHeaders"`
	IgnoreRequests              []string `pulumi:"ignoreRequests"`
	IgnoreUsers                 []string `pulumi:"ignoreUsers"`
	LogRequestBody              *bool    `pulumi:"logRequestBody"`
	ResolveBulkRequests         *bool    `pulumi:"resolveBulkRequests"`
	ResolveIndices              *bool    `pulumi:"resolveIndices"`
}

// AuditConfigAuditInput is an input type that accepts AuditConfigAuditArgs and AuditConfigAuditOutput values.
// You can construct a concrete instance of `AuditConfigAuditInput` via:
//
//	AuditConfigAuditArgs{...}
type AuditConfigAuditInput interface {
	pulumi.Input

	ToAuditConfigAuditOutput() AuditConfigAuditOutput
	ToAuditConfigAuditOutputWithContext(context.Context) AuditConfigAuditOutput
}

type AuditConfigAuditArgs struct {
	DisabledRestCategories      pulumi.StringArrayInput `pulumi:"disabledRestCategories"`
	DisabledTransportCategories pulumi.StringArrayInput `pulumi:"disabledTransportCategories"`
	EnableRest                  pulumi.BoolPtrInput     `pulumi:"enableRest"`
	EnableTransport             pulumi.BoolPtrInput     `pulumi:"enableTransport"`
	ExcludeSensitiveHeaders     pulumi.BoolPtrInput     `pulumi:"excludeSensitiveHeaders"`
	IgnoreRequests              pulumi.StringArrayInput `pulumi:"ignoreRequests"`
	IgnoreUsers                 pulumi.StringArrayInput `pulumi:"ignoreUsers"`
	LogRequestBody              pulumi.BoolPtrInput     `pulumi:"logRequestBody"`
	ResolveBulkRequests         pulumi.BoolPtrInput     `pulumi:"resolveBulkRequests"`
	ResolveIndices              pulumi.BoolPtrInput     `pulumi:"resolveIndices"`
}

func (AuditConfigAuditArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigAudit)(nil)).Elem()
}

func (i AuditConfigAuditArgs) ToAuditConfigAuditOutput() AuditConfigAuditOutput {
	return i.ToAuditConfigAuditOutputWithContext(context.Background())
}

func (i AuditConfigAuditArgs) ToAuditConfigAuditOutputWithContext(ctx context.Context) AuditConfigAuditOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigAuditOutput)
}

func (i AuditConfigAuditArgs) ToAuditConfigAuditPtrOutput() AuditConfigAuditPtrOutput {
	return i.ToAuditConfigAuditPtrOutputWithContext(context.Background())
}

func (i AuditConfigAuditArgs) ToAuditConfigAuditPtrOutputWithContext(ctx context.Context) AuditConfigAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigAuditOutput).ToAuditConfigAuditPtrOutputWithContext(ctx)
}

// AuditConfigAuditPtrInput is an input type that accepts AuditConfigAuditArgs, AuditConfigAuditPtr and AuditConfigAuditPtrOutput values.
// You can construct a concrete instance of `AuditConfigAuditPtrInput` via:
//
//	        AuditConfigAuditArgs{...}
//
//	or:
//
//	        nil
type AuditConfigAuditPtrInput interface {
	pulumi.Input

	ToAuditConfigAuditPtrOutput() AuditConfigAuditPtrOutput
	ToAuditConfigAuditPtrOutputWithContext(context.Context) AuditConfigAuditPtrOutput
}

type auditConfigAuditPtrType AuditConfigAuditArgs

func AuditConfigAuditPtr(v *AuditConfigAuditArgs) AuditConfigAuditPtrInput {
	return (*auditConfigAuditPtrType)(v)
}

func (*auditConfigAuditPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditConfigAudit)(nil)).Elem()
}

func (i *auditConfigAuditPtrType) ToAuditConfigAuditPtrOutput() AuditConfigAuditPtrOutput {
	return i.ToAuditConfigAuditPtrOutputWithContext(context.Background())
}

func (i *auditConfigAuditPtrType) ToAuditConfigAuditPtrOutputWithContext(ctx context.Context) AuditConfigAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigAuditPtrOutput)
}

type AuditConfigAuditOutput struct{ *pulumi.OutputState }

func (AuditConfigAuditOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigAudit)(nil)).Elem()
}

func (o AuditConfigAuditOutput) ToAuditConfigAuditOutput() AuditConfigAuditOutput {
	return o
}

func (o AuditConfigAuditOutput) ToAuditConfigAuditOutputWithContext(ctx context.Context) AuditConfigAuditOutput {
	return o
}

func (o AuditConfigAuditOutput) ToAuditConfigAuditPtrOutput() AuditConfigAuditPtrOutput {
	return o.ToAuditConfigAuditPtrOutputWithContext(context.Background())
}

func (o AuditConfigAuditOutput) ToAuditConfigAuditPtrOutputWithContext(ctx context.Context) AuditConfigAuditPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditConfigAudit) *AuditConfigAudit {
		return &v
	}).(AuditConfigAuditPtrOutput)
}

func (o AuditConfigAuditOutput) DisabledRestCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditConfigAudit) []string { return v.DisabledRestCategories }).(pulumi.StringArrayOutput)
}

func (o AuditConfigAuditOutput) DisabledTransportCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditConfigAudit) []string { return v.DisabledTransportCategories }).(pulumi.StringArrayOutput)
}

func (o AuditConfigAuditOutput) EnableRest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuditConfigAudit) *bool { return v.EnableRest }).(pulumi.BoolPtrOutput)
}

func (o AuditConfigAuditOutput) EnableTransport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuditConfigAudit) *bool { return v.EnableTransport }).(pulumi.BoolPtrOutput)
}

func (o AuditConfigAuditOutput) ExcludeSensitiveHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuditConfigAudit) *bool { return v.ExcludeSensitiveHeaders }).(pulumi.BoolPtrOutput)
}

func (o AuditConfigAuditOutput) IgnoreRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditConfigAudit) []string { return v.IgnoreRequests }).(pulumi.StringArrayOutput)
}

func (o AuditConfigAuditOutput) IgnoreUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditConfigAudit) []string { return v.IgnoreUsers }).(pulumi.StringArrayOutput)
}

func (o AuditConfigAuditOutput) LogRequestBody() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuditConfigAudit) *bool { return v.LogRequestBody }).(pulumi.BoolPtrOutput)
}

func (o AuditConfigAuditOutput) ResolveBulkRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuditConfigAudit) *bool { return v.ResolveBulkRequests }).(pulumi.BoolPtrOutput)
}

func (o AuditConfigAuditOutput) ResolveIndices() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuditConfigAudit) *bool { return v.ResolveIndices }).(pulumi.BoolPtrOutput)
}

type AuditConfigAuditPtrOutput struct{ *pulumi.OutputState }

func (AuditConfigAuditPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditConfigAudit)(nil)).Elem()
}

func (o AuditConfigAuditPtrOutput) ToAuditConfigAuditPtrOutput() AuditConfigAuditPtrOutput {
	return o
}

func (o AuditConfigAuditPtrOutput) ToAuditConfigAuditPtrOutputWithContext(ctx context.Context) AuditConfigAuditPtrOutput {
	return o
}

func (o AuditConfigAuditPtrOutput) Elem() AuditConfigAuditOutput {
	return o.ApplyT(func(v *AuditConfigAudit) AuditConfigAudit {
		if v != nil {
			return *v
		}
		var ret AuditConfigAudit
		return ret
	}).(AuditConfigAuditOutput)
}

func (o AuditConfigAuditPtrOutput) DisabledRestCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditConfigAudit) []string {
		if v == nil {
			return nil
		}
		return v.DisabledRestCategories
	}).(pulumi.StringArrayOutput)
}

func (o AuditConfigAuditPtrOutput) DisabledTransportCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditConfigAudit) []string {
		if v == nil {
			return nil
		}
		return v.DisabledTransportCategories
	}).(pulumi.StringArrayOutput)
}

func (o AuditConfigAuditPtrOutput) EnableRest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuditConfigAudit) *bool {
		if v == nil {
			return nil
		}
		return v.EnableRest
	}).(pulumi.BoolPtrOutput)
}

func (o AuditConfigAuditPtrOutput) EnableTransport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuditConfigAudit) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTransport
	}).(pulumi.BoolPtrOutput)
}

func (o AuditConfigAuditPtrOutput) ExcludeSensitiveHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuditConfigAudit) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeSensitiveHeaders
	}).(pulumi.BoolPtrOutput)
}

func (o AuditConfigAuditPtrOutput) IgnoreRequests() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditConfigAudit) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreRequests
	}).(pulumi.StringArrayOutput)
}

func (o AuditConfigAuditPtrOutput) IgnoreUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditConfigAudit) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreUsers
	}).(pulumi.StringArrayOutput)
}

func (o AuditConfigAuditPtrOutput) LogRequestBody() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuditConfigAudit) *bool {
		if v == nil {
			return nil
		}
		return v.LogRequestBody
	}).(pulumi.BoolPtrOutput)
}

func (o AuditConfigAuditPtrOutput) ResolveBulkRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuditConfigAudit) *bool {
		if v == nil {
			return nil
		}
		return v.ResolveBulkRequests
	}).(pulumi.BoolPtrOutput)
}

func (o AuditConfigAuditPtrOutput) ResolveIndices() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuditConfigAudit) *bool {
		if v == nil {
			return nil
		}
		return v.ResolveIndices
	}).(pulumi.BoolPtrOutput)
}

type AuditConfigCompliance struct {
	Enabled             *bool                                   `pulumi:"enabled"`
	ExternalConfig      *bool                                   `pulumi:"externalConfig"`
	InternalConfig      *bool                                   `pulumi:"internalConfig"`
	ReadIgnoreUsers     []string                                `pulumi:"readIgnoreUsers"`
	ReadMetadataOnly    *bool                                   `pulumi:"readMetadataOnly"`
	ReadWatchedFields   []AuditConfigComplianceReadWatchedField `pulumi:"readWatchedFields"`
	WriteIgnoreUsers    []string                                `pulumi:"writeIgnoreUsers"`
	WriteLogDiffs       *bool                                   `pulumi:"writeLogDiffs"`
	WriteMetadataOnly   *bool                                   `pulumi:"writeMetadataOnly"`
	WriteWatchedIndices []string                                `pulumi:"writeWatchedIndices"`
}

// AuditConfigComplianceInput is an input type that accepts AuditConfigComplianceArgs and AuditConfigComplianceOutput values.
// You can construct a concrete instance of `AuditConfigComplianceInput` via:
//
//	AuditConfigComplianceArgs{...}
type AuditConfigComplianceInput interface {
	pulumi.Input

	ToAuditConfigComplianceOutput() AuditConfigComplianceOutput
	ToAuditConfigComplianceOutputWithContext(context.Context) AuditConfigComplianceOutput
}

type AuditConfigComplianceArgs struct {
	Enabled             pulumi.BoolPtrInput                             `pulumi:"enabled"`
	ExternalConfig      pulumi.BoolPtrInput                             `pulumi:"externalConfig"`
	InternalConfig      pulumi.BoolPtrInput                             `pulumi:"internalConfig"`
	ReadIgnoreUsers     pulumi.StringArrayInput                         `pulumi:"readIgnoreUsers"`
	ReadMetadataOnly    pulumi.BoolPtrInput                             `pulumi:"readMetadataOnly"`
	ReadWatchedFields   AuditConfigComplianceReadWatchedFieldArrayInput `pulumi:"readWatchedFields"`
	WriteIgnoreUsers    pulumi.StringArrayInput                         `pulumi:"writeIgnoreUsers"`
	WriteLogDiffs       pulumi.BoolPtrInput                             `pulumi:"writeLogDiffs"`
	WriteMetadataOnly   pulumi.BoolPtrInput                             `pulumi:"writeMetadataOnly"`
	WriteWatchedIndices pulumi.StringArrayInput                         `pulumi:"writeWatchedIndices"`
}

func (AuditConfigComplianceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigCompliance)(nil)).Elem()
}

func (i AuditConfigComplianceArgs) ToAuditConfigComplianceOutput() AuditConfigComplianceOutput {
	return i.ToAuditConfigComplianceOutputWithContext(context.Background())
}

func (i AuditConfigComplianceArgs) ToAuditConfigComplianceOutputWithContext(ctx context.Context) AuditConfigComplianceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigComplianceOutput)
}

func (i AuditConfigComplianceArgs) ToAuditConfigCompliancePtrOutput() AuditConfigCompliancePtrOutput {
	return i.ToAuditConfigCompliancePtrOutputWithContext(context.Background())
}

func (i AuditConfigComplianceArgs) ToAuditConfigCompliancePtrOutputWithContext(ctx context.Context) AuditConfigCompliancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigComplianceOutput).ToAuditConfigCompliancePtrOutputWithContext(ctx)
}

// AuditConfigCompliancePtrInput is an input type that accepts AuditConfigComplianceArgs, AuditConfigCompliancePtr and AuditConfigCompliancePtrOutput values.
// You can construct a concrete instance of `AuditConfigCompliancePtrInput` via:
//
//	        AuditConfigComplianceArgs{...}
//
//	or:
//
//	        nil
type AuditConfigCompliancePtrInput interface {
	pulumi.Input

	ToAuditConfigCompliancePtrOutput() AuditConfigCompliancePtrOutput
	ToAuditConfigCompliancePtrOutputWithContext(context.Context) AuditConfigCompliancePtrOutput
}

type auditConfigCompliancePtrType AuditConfigComplianceArgs

func AuditConfigCompliancePtr(v *AuditConfigComplianceArgs) AuditConfigCompliancePtrInput {
	return (*auditConfigCompliancePtrType)(v)
}

func (*auditConfigCompliancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditConfigCompliance)(nil)).Elem()
}

func (i *auditConfigCompliancePtrType) ToAuditConfigCompliancePtrOutput() AuditConfigCompliancePtrOutput {
	return i.ToAuditConfigCompliancePtrOutputWithContext(context.Background())
}

func (i *auditConfigCompliancePtrType) ToAuditConfigCompliancePtrOutputWithContext(ctx context.Context) AuditConfigCompliancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigCompliancePtrOutput)
}

type AuditConfigComplianceOutput struct{ *pulumi.OutputState }

func (AuditConfigComplianceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigCompliance)(nil)).Elem()
}

func (o AuditConfigComplianceOutput) ToAuditConfigComplianceOutput() AuditConfigComplianceOutput {
	return o
}

func (o AuditConfigComplianceOutput) ToAuditConfigComplianceOutputWithContext(ctx context.Context) AuditConfigComplianceOutput {
	return o
}

func (o AuditConfigComplianceOutput) ToAuditConfigCompliancePtrOutput() AuditConfigCompliancePtrOutput {
	return o.ToAuditConfigCompliancePtrOutputWithContext(context.Background())
}

func (o AuditConfigComplianceOutput) ToAuditConfigCompliancePtrOutputWithContext(ctx context.Context) AuditConfigCompliancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditConfigCompliance) *AuditConfigCompliance {
		return &v
	}).(AuditConfigCompliancePtrOutput)
}

func (o AuditConfigComplianceOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuditConfigCompliance) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o AuditConfigComplianceOutput) ExternalConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuditConfigCompliance) *bool { return v.ExternalConfig }).(pulumi.BoolPtrOutput)
}

func (o AuditConfigComplianceOutput) InternalConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuditConfigCompliance) *bool { return v.InternalConfig }).(pulumi.BoolPtrOutput)
}

func (o AuditConfigComplianceOutput) ReadIgnoreUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditConfigCompliance) []string { return v.ReadIgnoreUsers }).(pulumi.StringArrayOutput)
}

func (o AuditConfigComplianceOutput) ReadMetadataOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuditConfigCompliance) *bool { return v.ReadMetadataOnly }).(pulumi.BoolPtrOutput)
}

func (o AuditConfigComplianceOutput) ReadWatchedFields() AuditConfigComplianceReadWatchedFieldArrayOutput {
	return o.ApplyT(func(v AuditConfigCompliance) []AuditConfigComplianceReadWatchedField { return v.ReadWatchedFields }).(AuditConfigComplianceReadWatchedFieldArrayOutput)
}

func (o AuditConfigComplianceOutput) WriteIgnoreUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditConfigCompliance) []string { return v.WriteIgnoreUsers }).(pulumi.StringArrayOutput)
}

func (o AuditConfigComplianceOutput) WriteLogDiffs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuditConfigCompliance) *bool { return v.WriteLogDiffs }).(pulumi.BoolPtrOutput)
}

func (o AuditConfigComplianceOutput) WriteMetadataOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuditConfigCompliance) *bool { return v.WriteMetadataOnly }).(pulumi.BoolPtrOutput)
}

func (o AuditConfigComplianceOutput) WriteWatchedIndices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditConfigCompliance) []string { return v.WriteWatchedIndices }).(pulumi.StringArrayOutput)
}

type AuditConfigCompliancePtrOutput struct{ *pulumi.OutputState }

func (AuditConfigCompliancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditConfigCompliance)(nil)).Elem()
}

func (o AuditConfigCompliancePtrOutput) ToAuditConfigCompliancePtrOutput() AuditConfigCompliancePtrOutput {
	return o
}

func (o AuditConfigCompliancePtrOutput) ToAuditConfigCompliancePtrOutputWithContext(ctx context.Context) AuditConfigCompliancePtrOutput {
	return o
}

func (o AuditConfigCompliancePtrOutput) Elem() AuditConfigComplianceOutput {
	return o.ApplyT(func(v *AuditConfigCompliance) AuditConfigCompliance {
		if v != nil {
			return *v
		}
		var ret AuditConfigCompliance
		return ret
	}).(AuditConfigComplianceOutput)
}

func (o AuditConfigCompliancePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuditConfigCompliance) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o AuditConfigCompliancePtrOutput) ExternalConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuditConfigCompliance) *bool {
		if v == nil {
			return nil
		}
		return v.ExternalConfig
	}).(pulumi.BoolPtrOutput)
}

func (o AuditConfigCompliancePtrOutput) InternalConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuditConfigCompliance) *bool {
		if v == nil {
			return nil
		}
		return v.InternalConfig
	}).(pulumi.BoolPtrOutput)
}

func (o AuditConfigCompliancePtrOutput) ReadIgnoreUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditConfigCompliance) []string {
		if v == nil {
			return nil
		}
		return v.ReadIgnoreUsers
	}).(pulumi.StringArrayOutput)
}

func (o AuditConfigCompliancePtrOutput) ReadMetadataOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuditConfigCompliance) *bool {
		if v == nil {
			return nil
		}
		return v.ReadMetadataOnly
	}).(pulumi.BoolPtrOutput)
}

func (o AuditConfigCompliancePtrOutput) ReadWatchedFields() AuditConfigComplianceReadWatchedFieldArrayOutput {
	return o.ApplyT(func(v *AuditConfigCompliance) []AuditConfigComplianceReadWatchedField {
		if v == nil {
			return nil
		}
		return v.ReadWatchedFields
	}).(AuditConfigComplianceReadWatchedFieldArrayOutput)
}

func (o AuditConfigCompliancePtrOutput) WriteIgnoreUsers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditConfigCompliance) []string {
		if v == nil {
			return nil
		}
		return v.WriteIgnoreUsers
	}).(pulumi.StringArrayOutput)
}

func (o AuditConfigCompliancePtrOutput) WriteLogDiffs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuditConfigCompliance) *bool {
		if v == nil {
			return nil
		}
		return v.WriteLogDiffs
	}).(pulumi.BoolPtrOutput)
}

func (o AuditConfigCompliancePtrOutput) WriteMetadataOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuditConfigCompliance) *bool {
		if v == nil {
			return nil
		}
		return v.WriteMetadataOnly
	}).(pulumi.BoolPtrOutput)
}

func (o AuditConfigCompliancePtrOutput) WriteWatchedIndices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuditConfigCompliance) []string {
		if v == nil {
			return nil
		}
		return v.WriteWatchedIndices
	}).(pulumi.StringArrayOutput)
}

type AuditConfigComplianceReadWatchedField struct {
	Fields []string `pulumi:"fields"`
	Index  string   `pulumi:"index"`
}

// AuditConfigComplianceReadWatchedFieldInput is an input type that accepts AuditConfigComplianceReadWatchedFieldArgs and AuditConfigComplianceReadWatchedFieldOutput values.
// You can construct a concrete instance of `AuditConfigComplianceReadWatchedFieldInput` via:
//
//	AuditConfigComplianceReadWatchedFieldArgs{...}
type AuditConfigComplianceReadWatchedFieldInput interface {
	pulumi.Input

	ToAuditConfigComplianceReadWatchedFieldOutput() AuditConfigComplianceReadWatchedFieldOutput
	ToAuditConfigComplianceReadWatchedFieldOutputWithContext(context.Context) AuditConfigComplianceReadWatchedFieldOutput
}

type AuditConfigComplianceReadWatchedFieldArgs struct {
	Fields pulumi.StringArrayInput `pulumi:"fields"`
	Index  pulumi.StringInput      `pulumi:"index"`
}

func (AuditConfigComplianceReadWatchedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigComplianceReadWatchedField)(nil)).Elem()
}

func (i AuditConfigComplianceReadWatchedFieldArgs) ToAuditConfigComplianceReadWatchedFieldOutput() AuditConfigComplianceReadWatchedFieldOutput {
	return i.ToAuditConfigComplianceReadWatchedFieldOutputWithContext(context.Background())
}

func (i AuditConfigComplianceReadWatchedFieldArgs) ToAuditConfigComplianceReadWatchedFieldOutputWithContext(ctx context.Context) AuditConfigComplianceReadWatchedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigComplianceReadWatchedFieldOutput)
}

// AuditConfigComplianceReadWatchedFieldArrayInput is an input type that accepts AuditConfigComplianceReadWatchedFieldArray and AuditConfigComplianceReadWatchedFieldArrayOutput values.
// You can construct a concrete instance of `AuditConfigComplianceReadWatchedFieldArrayInput` via:
//
//	AuditConfigComplianceReadWatchedFieldArray{ AuditConfigComplianceReadWatchedFieldArgs{...} }
type AuditConfigComplianceReadWatchedFieldArrayInput interface {
	pulumi.Input

	ToAuditConfigComplianceReadWatchedFieldArrayOutput() AuditConfigComplianceReadWatchedFieldArrayOutput
	ToAuditConfigComplianceReadWatchedFieldArrayOutputWithContext(context.Context) AuditConfigComplianceReadWatchedFieldArrayOutput
}

type AuditConfigComplianceReadWatchedFieldArray []AuditConfigComplianceReadWatchedFieldInput

func (AuditConfigComplianceReadWatchedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfigComplianceReadWatchedField)(nil)).Elem()
}

func (i AuditConfigComplianceReadWatchedFieldArray) ToAuditConfigComplianceReadWatchedFieldArrayOutput() AuditConfigComplianceReadWatchedFieldArrayOutput {
	return i.ToAuditConfigComplianceReadWatchedFieldArrayOutputWithContext(context.Background())
}

func (i AuditConfigComplianceReadWatchedFieldArray) ToAuditConfigComplianceReadWatchedFieldArrayOutputWithContext(ctx context.Context) AuditConfigComplianceReadWatchedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigComplianceReadWatchedFieldArrayOutput)
}

type AuditConfigComplianceReadWatchedFieldOutput struct{ *pulumi.OutputState }

func (AuditConfigComplianceReadWatchedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigComplianceReadWatchedField)(nil)).Elem()
}

func (o AuditConfigComplianceReadWatchedFieldOutput) ToAuditConfigComplianceReadWatchedFieldOutput() AuditConfigComplianceReadWatchedFieldOutput {
	return o
}

func (o AuditConfigComplianceReadWatchedFieldOutput) ToAuditConfigComplianceReadWatchedFieldOutputWithContext(ctx context.Context) AuditConfigComplianceReadWatchedFieldOutput {
	return o
}

func (o AuditConfigComplianceReadWatchedFieldOutput) Fields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditConfigComplianceReadWatchedField) []string { return v.Fields }).(pulumi.StringArrayOutput)
}

func (o AuditConfigComplianceReadWatchedFieldOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v AuditConfigComplianceReadWatchedField) string { return v.Index }).(pulumi.StringOutput)
}

type AuditConfigComplianceReadWatchedFieldArrayOutput struct{ *pulumi.OutputState }

func (AuditConfigComplianceReadWatchedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfigComplianceReadWatchedField)(nil)).Elem()
}

func (o AuditConfigComplianceReadWatchedFieldArrayOutput) ToAuditConfigComplianceReadWatchedFieldArrayOutput() AuditConfigComplianceReadWatchedFieldArrayOutput {
	return o
}

func (o AuditConfigComplianceReadWatchedFieldArrayOutput) ToAuditConfigComplianceReadWatchedFieldArrayOutputWithContext(ctx context.Context) AuditConfigComplianceReadWatchedFieldArrayOutput {
	return o
}

func (o AuditConfigComplianceReadWatchedFieldArrayOutput) Index(i pulumi.IntInput) AuditConfigComplianceReadWatchedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditConfigComplianceReadWatchedField {
		return vs[0].([]AuditConfigComplianceReadWatchedField)[vs[1].(int)]
	}).(AuditConfigComplianceReadWatchedFieldOutput)
}

type RoleIndexPermission struct {
	// A list of allowed actions.
	AllowedActions []string `pulumi:"allowedActions"`
	// A selector for document-level security (json formatted using jsonencode).
	DocumentLevelSecurity *string `pulumi:"documentLevelSecurity"`
	// A list of selectors for field-level security.
	FieldLevelSecurities []string `pulumi:"fieldLevelSecurities"`
	// A list of glob patterns for the index names.
	IndexPatterns []string `pulumi:"indexPatterns"`
	// A list of masked fields
	MaskedFields []string `pulumi:"maskedFields"`
}

// RoleIndexPermissionInput is an input type that accepts RoleIndexPermissionArgs and RoleIndexPermissionOutput values.
// You can construct a concrete instance of `RoleIndexPermissionInput` via:
//
//	RoleIndexPermissionArgs{...}
type RoleIndexPermissionInput interface {
	pulumi.Input

	ToRoleIndexPermissionOutput() RoleIndexPermissionOutput
	ToRoleIndexPermissionOutputWithContext(context.Context) RoleIndexPermissionOutput
}

type RoleIndexPermissionArgs struct {
	// A list of allowed actions.
	AllowedActions pulumi.StringArrayInput `pulumi:"allowedActions"`
	// A selector for document-level security (json formatted using jsonencode).
	DocumentLevelSecurity pulumi.StringPtrInput `pulumi:"documentLevelSecurity"`
	// A list of selectors for field-level security.
	FieldLevelSecurities pulumi.StringArrayInput `pulumi:"fieldLevelSecurities"`
	// A list of glob patterns for the index names.
	IndexPatterns pulumi.StringArrayInput `pulumi:"indexPatterns"`
	// A list of masked fields
	MaskedFields pulumi.StringArrayInput `pulumi:"maskedFields"`
}

func (RoleIndexPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleIndexPermission)(nil)).Elem()
}

func (i RoleIndexPermissionArgs) ToRoleIndexPermissionOutput() RoleIndexPermissionOutput {
	return i.ToRoleIndexPermissionOutputWithContext(context.Background())
}

func (i RoleIndexPermissionArgs) ToRoleIndexPermissionOutputWithContext(ctx context.Context) RoleIndexPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleIndexPermissionOutput)
}

// RoleIndexPermissionArrayInput is an input type that accepts RoleIndexPermissionArray and RoleIndexPermissionArrayOutput values.
// You can construct a concrete instance of `RoleIndexPermissionArrayInput` via:
//
//	RoleIndexPermissionArray{ RoleIndexPermissionArgs{...} }
type RoleIndexPermissionArrayInput interface {
	pulumi.Input

	ToRoleIndexPermissionArrayOutput() RoleIndexPermissionArrayOutput
	ToRoleIndexPermissionArrayOutputWithContext(context.Context) RoleIndexPermissionArrayOutput
}

type RoleIndexPermissionArray []RoleIndexPermissionInput

func (RoleIndexPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleIndexPermission)(nil)).Elem()
}

func (i RoleIndexPermissionArray) ToRoleIndexPermissionArrayOutput() RoleIndexPermissionArrayOutput {
	return i.ToRoleIndexPermissionArrayOutputWithContext(context.Background())
}

func (i RoleIndexPermissionArray) ToRoleIndexPermissionArrayOutputWithContext(ctx context.Context) RoleIndexPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleIndexPermissionArrayOutput)
}

type RoleIndexPermissionOutput struct{ *pulumi.OutputState }

func (RoleIndexPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleIndexPermission)(nil)).Elem()
}

func (o RoleIndexPermissionOutput) ToRoleIndexPermissionOutput() RoleIndexPermissionOutput {
	return o
}

func (o RoleIndexPermissionOutput) ToRoleIndexPermissionOutputWithContext(ctx context.Context) RoleIndexPermissionOutput {
	return o
}

// A list of allowed actions.
func (o RoleIndexPermissionOutput) AllowedActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoleIndexPermission) []string { return v.AllowedActions }).(pulumi.StringArrayOutput)
}

// A selector for document-level security (json formatted using jsonencode).
func (o RoleIndexPermissionOutput) DocumentLevelSecurity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleIndexPermission) *string { return v.DocumentLevelSecurity }).(pulumi.StringPtrOutput)
}

// A list of selectors for field-level security.
func (o RoleIndexPermissionOutput) FieldLevelSecurities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoleIndexPermission) []string { return v.FieldLevelSecurities }).(pulumi.StringArrayOutput)
}

// A list of glob patterns for the index names.
func (o RoleIndexPermissionOutput) IndexPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoleIndexPermission) []string { return v.IndexPatterns }).(pulumi.StringArrayOutput)
}

// A list of masked fields
func (o RoleIndexPermissionOutput) MaskedFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoleIndexPermission) []string { return v.MaskedFields }).(pulumi.StringArrayOutput)
}

type RoleIndexPermissionArrayOutput struct{ *pulumi.OutputState }

func (RoleIndexPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleIndexPermission)(nil)).Elem()
}

func (o RoleIndexPermissionArrayOutput) ToRoleIndexPermissionArrayOutput() RoleIndexPermissionArrayOutput {
	return o
}

func (o RoleIndexPermissionArrayOutput) ToRoleIndexPermissionArrayOutputWithContext(ctx context.Context) RoleIndexPermissionArrayOutput {
	return o
}

func (o RoleIndexPermissionArrayOutput) Index(i pulumi.IntInput) RoleIndexPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoleIndexPermission {
		return vs[0].([]RoleIndexPermission)[vs[1].(int)]
	}).(RoleIndexPermissionOutput)
}

type RoleTenantPermission struct {
	// A list of allowed actions.
	AllowedActions []string `pulumi:"allowedActions"`
	// A list of glob patterns for the tenant names
	TenantPatterns []string `pulumi:"tenantPatterns"`
}

// RoleTenantPermissionInput is an input type that accepts RoleTenantPermissionArgs and RoleTenantPermissionOutput values.
// You can construct a concrete instance of `RoleTenantPermissionInput` via:
//
//	RoleTenantPermissionArgs{...}
type RoleTenantPermissionInput interface {
	pulumi.Input

	ToRoleTenantPermissionOutput() RoleTenantPermissionOutput
	ToRoleTenantPermissionOutputWithContext(context.Context) RoleTenantPermissionOutput
}

type RoleTenantPermissionArgs struct {
	// A list of allowed actions.
	AllowedActions pulumi.StringArrayInput `pulumi:"allowedActions"`
	// A list of glob patterns for the tenant names
	TenantPatterns pulumi.StringArrayInput `pulumi:"tenantPatterns"`
}

func (RoleTenantPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleTenantPermission)(nil)).Elem()
}

func (i RoleTenantPermissionArgs) ToRoleTenantPermissionOutput() RoleTenantPermissionOutput {
	return i.ToRoleTenantPermissionOutputWithContext(context.Background())
}

func (i RoleTenantPermissionArgs) ToRoleTenantPermissionOutputWithContext(ctx context.Context) RoleTenantPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleTenantPermissionOutput)
}

// RoleTenantPermissionArrayInput is an input type that accepts RoleTenantPermissionArray and RoleTenantPermissionArrayOutput values.
// You can construct a concrete instance of `RoleTenantPermissionArrayInput` via:
//
//	RoleTenantPermissionArray{ RoleTenantPermissionArgs{...} }
type RoleTenantPermissionArrayInput interface {
	pulumi.Input

	ToRoleTenantPermissionArrayOutput() RoleTenantPermissionArrayOutput
	ToRoleTenantPermissionArrayOutputWithContext(context.Context) RoleTenantPermissionArrayOutput
}

type RoleTenantPermissionArray []RoleTenantPermissionInput

func (RoleTenantPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleTenantPermission)(nil)).Elem()
}

func (i RoleTenantPermissionArray) ToRoleTenantPermissionArrayOutput() RoleTenantPermissionArrayOutput {
	return i.ToRoleTenantPermissionArrayOutputWithContext(context.Background())
}

func (i RoleTenantPermissionArray) ToRoleTenantPermissionArrayOutputWithContext(ctx context.Context) RoleTenantPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleTenantPermissionArrayOutput)
}

type RoleTenantPermissionOutput struct{ *pulumi.OutputState }

func (RoleTenantPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleTenantPermission)(nil)).Elem()
}

func (o RoleTenantPermissionOutput) ToRoleTenantPermissionOutput() RoleTenantPermissionOutput {
	return o
}

func (o RoleTenantPermissionOutput) ToRoleTenantPermissionOutputWithContext(ctx context.Context) RoleTenantPermissionOutput {
	return o
}

// A list of allowed actions.
func (o RoleTenantPermissionOutput) AllowedActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoleTenantPermission) []string { return v.AllowedActions }).(pulumi.StringArrayOutput)
}

// A list of glob patterns for the tenant names
func (o RoleTenantPermissionOutput) TenantPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoleTenantPermission) []string { return v.TenantPatterns }).(pulumi.StringArrayOutput)
}

type RoleTenantPermissionArrayOutput struct{ *pulumi.OutputState }

func (RoleTenantPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleTenantPermission)(nil)).Elem()
}

func (o RoleTenantPermissionArrayOutput) ToRoleTenantPermissionArrayOutput() RoleTenantPermissionArrayOutput {
	return o
}

func (o RoleTenantPermissionArrayOutput) ToRoleTenantPermissionArrayOutputWithContext(ctx context.Context) RoleTenantPermissionArrayOutput {
	return o
}

func (o RoleTenantPermissionArrayOutput) Index(i pulumi.IntInput) RoleTenantPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoleTenantPermission {
		return vs[0].([]RoleTenantPermission)[vs[1].(int)]
	}).(RoleTenantPermissionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigAuditInput)(nil)).Elem(), AuditConfigAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigAuditPtrInput)(nil)).Elem(), AuditConfigAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigComplianceInput)(nil)).Elem(), AuditConfigComplianceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigCompliancePtrInput)(nil)).Elem(), AuditConfigComplianceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigComplianceReadWatchedFieldInput)(nil)).Elem(), AuditConfigComplianceReadWatchedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigComplianceReadWatchedFieldArrayInput)(nil)).Elem(), AuditConfigComplianceReadWatchedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleIndexPermissionInput)(nil)).Elem(), RoleIndexPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleIndexPermissionArrayInput)(nil)).Elem(), RoleIndexPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleTenantPermissionInput)(nil)).Elem(), RoleTenantPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleTenantPermissionArrayInput)(nil)).Elem(), RoleTenantPermissionArray{})
	pulumi.RegisterOutputType(AuditConfigAuditOutput{})
	pulumi.RegisterOutputType(AuditConfigAuditPtrOutput{})
	pulumi.RegisterOutputType(AuditConfigComplianceOutput{})
	pulumi.RegisterOutputType(AuditConfigCompliancePtrOutput{})
	pulumi.RegisterOutputType(AuditConfigComplianceReadWatchedFieldOutput{})
	pulumi.RegisterOutputType(AuditConfigComplianceReadWatchedFieldArrayOutput{})
	pulumi.RegisterOutputType(RoleIndexPermissionOutput{})
	pulumi.RegisterOutputType(RoleIndexPermissionArrayOutput{})
	pulumi.RegisterOutputType(RoleTenantPermissionOutput{})
	pulumi.RegisterOutputType(RoleTenantPermissionArrayOutput{})
}
