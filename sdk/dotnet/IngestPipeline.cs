// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Piclemx.Opensearch
{
    /// <summary>
    /// Provides an OpenSearch ingest pipeline resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Opensearch = Piclemx.Opensearch;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create a simple ingest pipeline
    ///     var test = new Opensearch.IngestPipeline("test", new()
    ///     {
    ///         Body = @"{
    ///   ""description"" : ""describe pipeline"",
    ///   ""version"": 123,
    ///   ""processors"" : [
    ///     {
    ///       ""set"" : {
    ///         ""field"": ""foo"",
    ///         ""value"": ""bar""
    ///       }
    ///     }
    ///   ]
    /// }
    /// 
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import opensearch:index/ingestPipeline:IngestPipeline test terraform-test
    /// ```
    /// </summary>
    [OpensearchResourceType("opensearch:index/ingestPipeline:IngestPipeline")]
    public partial class IngestPipeline : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The JSON body of the ingest pipeline
        /// </summary>
        [Output("body")]
        public Output<string> Body { get; private set; } = null!;

        /// <summary>
        /// The name of the ingest pipeline
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a IngestPipeline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IngestPipeline(string name, IngestPipelineArgs args, CustomResourceOptions? options = null)
            : base("opensearch:index/ingestPipeline:IngestPipeline", name, args ?? new IngestPipelineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IngestPipeline(string name, Input<string> id, IngestPipelineState? state = null, CustomResourceOptions? options = null)
            : base("opensearch:index/ingestPipeline:IngestPipeline", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/piclemx/pulumi-opensearch",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IngestPipeline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IngestPipeline Get(string name, Input<string> id, IngestPipelineState? state = null, CustomResourceOptions? options = null)
        {
            return new IngestPipeline(name, id, state, options);
        }
    }

    public sealed class IngestPipelineArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The JSON body of the ingest pipeline
        /// </summary>
        [Input("body", required: true)]
        public Input<string> Body { get; set; } = null!;

        /// <summary>
        /// The name of the ingest pipeline
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public IngestPipelineArgs()
        {
        }
        public static new IngestPipelineArgs Empty => new IngestPipelineArgs();
    }

    public sealed class IngestPipelineState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The JSON body of the ingest pipeline
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// The name of the ingest pipeline
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public IngestPipelineState()
        {
        }
        public static new IngestPipelineState Empty => new IngestPipelineState();
    }
}
