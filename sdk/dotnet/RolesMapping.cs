// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Piclemx.Opensearch
{
    /// <summary>
    /// Provides an OpenSearch security role mapping. Please refer to the OpenSearch Access Control documentation for details.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Opensearch = Piclemx.Opensearch;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create a role mapping
    ///     var mapper = new Opensearch.RolesMapping("mapper", new()
    ///     {
    ///         BackendRoles = new[]
    ///         {
    ///             "arn:aws:iam::123456789012:role/lambda-call-opensearch",
    ///             "arn:aws:iam::123456789012:role/run-containers",
    ///         },
    ///         Description = "Mapping AWS IAM roles to ES role",
    ///         RoleName = "logs_writer",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import opensearch:index/rolesMapping:RolesMapping mapper logs_writer
    /// ```
    /// </summary>
    [OpensearchResourceType("opensearch:index/rolesMapping:RolesMapping")]
    public partial class RolesMapping : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of backend roles.
        /// </summary>
        [Output("andBackendRoles")]
        public Output<ImmutableArray<string>> AndBackendRoles { get; private set; } = null!;

        /// <summary>
        /// A list of backend roles.
        /// </summary>
        [Output("backendRoles")]
        public Output<ImmutableArray<string>> BackendRoles { get; private set; } = null!;

        /// <summary>
        /// Description of the role mapping.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A list of host names.
        /// </summary>
        [Output("hosts")]
        public Output<ImmutableArray<string>> Hosts { get; private set; } = null!;

        /// <summary>
        /// The name of the security role.
        /// </summary>
        [Output("roleName")]
        public Output<string> RoleName { get; private set; } = null!;

        /// <summary>
        /// A list of users.
        /// </summary>
        [Output("users")]
        public Output<ImmutableArray<string>> Users { get; private set; } = null!;


        /// <summary>
        /// Create a RolesMapping resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RolesMapping(string name, RolesMappingArgs args, CustomResourceOptions? options = null)
            : base("opensearch:index/rolesMapping:RolesMapping", name, args ?? new RolesMappingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RolesMapping(string name, Input<string> id, RolesMappingState? state = null, CustomResourceOptions? options = null)
            : base("opensearch:index/rolesMapping:RolesMapping", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/piclemx/pulumi-opensearch",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RolesMapping resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RolesMapping Get(string name, Input<string> id, RolesMappingState? state = null, CustomResourceOptions? options = null)
        {
            return new RolesMapping(name, id, state, options);
        }
    }

    public sealed class RolesMappingArgs : global::Pulumi.ResourceArgs
    {
        [Input("andBackendRoles")]
        private InputList<string>? _andBackendRoles;

        /// <summary>
        /// A list of backend roles.
        /// </summary>
        public InputList<string> AndBackendRoles
        {
            get => _andBackendRoles ?? (_andBackendRoles = new InputList<string>());
            set => _andBackendRoles = value;
        }

        [Input("backendRoles")]
        private InputList<string>? _backendRoles;

        /// <summary>
        /// A list of backend roles.
        /// </summary>
        public InputList<string> BackendRoles
        {
            get => _backendRoles ?? (_backendRoles = new InputList<string>());
            set => _backendRoles = value;
        }

        /// <summary>
        /// Description of the role mapping.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("hosts")]
        private InputList<string>? _hosts;

        /// <summary>
        /// A list of host names.
        /// </summary>
        public InputList<string> Hosts
        {
            get => _hosts ?? (_hosts = new InputList<string>());
            set => _hosts = value;
        }

        /// <summary>
        /// The name of the security role.
        /// </summary>
        [Input("roleName", required: true)]
        public Input<string> RoleName { get; set; } = null!;

        [Input("users")]
        private InputList<string>? _users;

        /// <summary>
        /// A list of users.
        /// </summary>
        public InputList<string> Users
        {
            get => _users ?? (_users = new InputList<string>());
            set => _users = value;
        }

        public RolesMappingArgs()
        {
        }
        public static new RolesMappingArgs Empty => new RolesMappingArgs();
    }

    public sealed class RolesMappingState : global::Pulumi.ResourceArgs
    {
        [Input("andBackendRoles")]
        private InputList<string>? _andBackendRoles;

        /// <summary>
        /// A list of backend roles.
        /// </summary>
        public InputList<string> AndBackendRoles
        {
            get => _andBackendRoles ?? (_andBackendRoles = new InputList<string>());
            set => _andBackendRoles = value;
        }

        [Input("backendRoles")]
        private InputList<string>? _backendRoles;

        /// <summary>
        /// A list of backend roles.
        /// </summary>
        public InputList<string> BackendRoles
        {
            get => _backendRoles ?? (_backendRoles = new InputList<string>());
            set => _backendRoles = value;
        }

        /// <summary>
        /// Description of the role mapping.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("hosts")]
        private InputList<string>? _hosts;

        /// <summary>
        /// A list of host names.
        /// </summary>
        public InputList<string> Hosts
        {
            get => _hosts ?? (_hosts = new InputList<string>());
            set => _hosts = value;
        }

        /// <summary>
        /// The name of the security role.
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        [Input("users")]
        private InputList<string>? _users;

        /// <summary>
        /// A list of users.
        /// </summary>
        public InputList<string> Users
        {
            get => _users ?? (_users = new InputList<string>());
            set => _users = value;
        }

        public RolesMappingState()
        {
        }
        public static new RolesMappingState Empty => new RolesMappingState();
    }
}
