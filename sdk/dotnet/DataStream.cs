// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Piclemx.Opensearch
{
    /// <summary>
    /// A data stream lets you store append-only time series data across multiple (hidden, auto-generated) indices while giving you a single named resource for requests
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Opensearch = Piclemx.Opensearch;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooComposableIndexTemplate = new Opensearch.ComposableIndexTemplate("fooComposableIndexTemplate", new()
    ///     {
    ///         Body = @"{
    ///   ""index_patterns"": [""foo-data-stream*""],
    ///   ""data_stream"": {}
    /// }
    /// ",
    ///     });
    /// 
    ///     var fooDataStream = new Opensearch.DataStream("fooDataStream", new()
    ///     {
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             fooComposableIndexTemplate,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OpensearchResourceType("opensearch:index/dataStream:DataStream")]
    public partial class DataStream : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the data stream to create, must have a matching
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a DataStream resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataStream(string name, DataStreamArgs? args = null, CustomResourceOptions? options = null)
            : base("opensearch:index/dataStream:DataStream", name, args ?? new DataStreamArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataStream(string name, Input<string> id, DataStreamState? state = null, CustomResourceOptions? options = null)
            : base("opensearch:index/dataStream:DataStream", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/piclemx/pulumi-opensearch",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataStream resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataStream Get(string name, Input<string> id, DataStreamState? state = null, CustomResourceOptions? options = null)
        {
            return new DataStream(name, id, state, options);
        }
    }

    public sealed class DataStreamArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the data stream to create, must have a matching
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public DataStreamArgs()
        {
        }
        public static new DataStreamArgs Empty => new DataStreamArgs();
    }

    public sealed class DataStreamState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the data stream to create, must have a matching
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public DataStreamState()
        {
        }
        public static new DataStreamState Empty => new DataStreamState();
    }
}
